name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: install trivy
        run: |
          #install trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          #command to scan files
      - name: Docker build and push
        run: |
            #run commands to build and push docker images
            docker build --build-arg TMDB_V3_API_KEY=5aba853d8668e3c43e069096a7e0d436 -t movie-stream .
            docker tag movie-stream rosariaquenum/movie-stream:latest
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker push rosariaquenum/movie-stream:latest  
        env:
            DOCKER_CLI_ACI: 1
  deploy:    
    needs: build 
    runs-on: [self-hosted]  
    steps:
      - name: Pull the docker image
        run: docker pull rosariaquenum/movie-stream:latest
      - name: Trivy image scan
        run: trivy image rosariaquenum/movie-stream:latest
      - name: Run the container movie-stream
        run: docker run -d --name movie-stream -p 8081:80 rosariaquenum/movie-stream:latest
